1. King George VI
2. Queen Mary
3. King George V
4. grandparent(X, 'Queen Elizabeth II').
    X = 'King George V' ;
    X = 'Queen Mary' ;
5. grandparent('Queen Elizabeth II', X).
    X = 'Prince William' ;
    X = 'Prince Henry' ;
6. Princess Margaret
7.  son(X, 'Queen Elizabeth II').
    X = 'Prince Charles' ;
    X = 'Prince Andrew' ;
    X = 'Prince Edward'.
8. Princess Anne
9. false, or None
10. Catherine Middleton
11. ancestor(X, 'Prince Henry').
    X = 'Prince Charles' ;
    X = 'Lady Diana Spencer' ;
    X = 'Prince Albert' ;
    X = 'Queen Victoria' ;
    X = 'King Edward VII' ;
    X = 'Princess Alexandra of Denmark' ;
    X = 'King George V' ;
    X = 'Queen Mary' ;
    X = 'King George VI' ;
    X = 'Lady Elizabeth Bowes-Lyon' ;
    X = 'Queen Elizabeth II' ;
    X = 'Prince Philip' ;
12. False, none.
13. False
14.  older(X, 'Queen Elizabeth II').
    X = 'Lady Elizabeth Bowes-Lyon' ;
    X = 'Prince Philip' ;
15. King George V
16. I like how you define rules and then use what you've defined to then find out
    Implications you can make from the facts.  I like logical programming i guess.
17. While it is cool, I can't think of very many instances where prolog would be
    Useful.  There are very specific use cases.
18. I did! It's cool to use logical rules and build off of them.  It was the easiest
    too.
19. Maybe 2-3 hours total.
20. Uhm....I can't see myself using it except maybe for something I would do for
    fun.  It was cool to learn but I guess I don't have the use cases.
EC1. cousin(X, 'Prince Charles').
    X = 'Viscount Linley' ;
    X = 'Lady Sarah Chatto' ;
EC2. cousin('Prince Charles', X).
    X = 'Viscount Linley' ;
    X = 'Lady Sarah Chatto' ;
